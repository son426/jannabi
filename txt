public
: react의 정적 파일들이 저장된 폴더(static 파일)
: static file = 이미지, css, html, js와 같이 내용이 고정->응답에서 별도의 처리 필요 없음
:

manifest.json : 사용자에게 기기 관련 메타데이터를 제공하는 파일

react-app-env.d.ts
: 환경변수 쓸 때, typescript 환경에서는 type지정해줘야함. 이 파일에다가 해주면 됨.

app.tsx가 index.tsx에서 public/index.html과 연결되는거임.

public 폴더 안에 있는 파일들만, html에서 참조할 수 있음.


----------------------------------------------
[개념]

DOM (Document Object Model)
- 웹페이지에 하나하나 요소들을 Element 라고 함. h1, p, li, img 등
- elements들을 담고 있는 웹페이지를 documents(문서)라고 함.
- 브라우저는 이 웹페이지에 있는 html 태그들을 분석해서 페이지를 띄워주는 거임
- DOM이란, 웹페이지의 elements 들을 트리형태로 표현한 거임
---DOM 트리 안에는 각 element에 해당하는 node가 들어있음.
---DOM이 제공하는 api -> DOM의 element에 접근해서 작업 = DOM 조작(querySelector같은게 바로 DOM 조작)

Virtual DOM(가상 돔)
- 리액트는 virtual DOM을 통해 실제 DOM을 조작하는 일을 빠르게 만듦.
- 가상 돔은 실제 돔과 똑같은 내용을 담고 있음(복사본). 객체 형태로 메모리에 저장돼있음.
- 그냥 자바스크립트 객체임. 실제 화면에 접근하는게 x
- 리액트는 두 개의 가상 돔을 유지함
1. 렌더링 이전 가상돔(변경이전)
2. 렌더링 이후 보이게 될 가상 돔(변경이후)
--- state가 바뀌면 2번 가상돔을 생성함.
--- Diffing : 1번과 2번의 변경사항을 파악하고
--- Reconsiliation(재조정) : 바뀐 부분을 실제 돔에다가 갈아끼우는 거임. 이 때 Batch Update를 수행
* batch update : 변경사항을 하나하나 갈아끼우는게 아니라, 한번에 갈아끼우게 됨 -> 빠름.




함수형 프로그래밍 vs 객체지향 프로그래밍

함수형 프로그래밍
- 

객체지향 프로그래밍

----------------------------------------------


[useState]
- setState에서 인자로는 prevState를 가져오게 됨. 그걸 이용
setState((prevState)=>{return newState})
- useState(초기값) 에서 초기값에서도 콜백으로 쓸 수 있음.
한번만 실행되게 하고 싶을 때 // 만약 무거운 작업을 해야하는거라면, 콜백 자체를 return으로 치기
useState(()=>{return heavyWorks()})


[useEffect]
컴포넌트가 아래의 상황에서, 특정 작업을 처리하고 싶을 때 사용
mount : 화면에 첫 렌더링
update : 다시 렌더링
unmount : 화면에서 사라질 때

두 가지 형태
useEffect(()=>{}) : 콜백만 -> 매 렌더링마다 콜백 실행
useEffect(()=>{},[value]) : 콜백 + dependancy array -> 마운트 + value값 바뀔때마다 콜백

cleanUp function : return 안에 정리해주는 작업 
- 컴포넌트가 unmount 될 때
- 다음 useEffect가 실행되기 전에 정리시켜줌
useEffect(()=>{
    // 작업 코드
    return ()=>{
        // 정리해주는 코드
    }
},[])


[useRef]
- 두 가지 용도
1. 변수의 저장공간
- state의 변화 -> 렌더링 -> 컴포넌트 내부 변수들 초기화됨
---> 변화시켜도 내부 변수들 초기화 안시키고 싶을 때. 변경해도 리렌더링 안시키고 싶을 때.
---> 반대로 state가 변화되어도, ref의 값들은 유지됨. 얘가 일반 변수 선언하는 것과의 차이점.
- 정리하면, 렌더링을 발생시키지 않는 변화 값을 다루고 싶을 때 사용하는 거임.
2. DOM 요소에 접근
- 바닐라 자바스크립트의 querySelector 같은 느낌으로.
- useRef를 쓰면, ref object를 반환함
---> const ref = useRef(value) -> {current:value}
---> 원하는 돔에다가 ref속성 넣으면 됨 // <input ref={ref} />








[react 컴포넌트에서 css 조작]
- styled-component props 설정
- 컴포넌트에서 state로 관리. state를 props로 넘겨주기


-------------0711-------------

[audio]
html audo 태그
- 맥 사파리에서 두번째부터 재생이 잘 안되는 이슈 있다고 함.

web audio api 객체


일단 노래가 나오게 해보자
1. html 태그 써서 
2. web audio api 객체 써서.


비디오, 오디오 파일, 엑셀파일 등 api로 주고받는 큰 파일타입은 거의 blob.


1. audiocontext 생성
2. source 생성하기 위해, input audio node를 생성
3. source에 효과 주기 위해, effects audio node 생성
4. audioContext source가 출력될 destination 설정
5. input audionode에 각종 effect audio node 연결되는거임
6. audioContext로 재생여부 제어


자동 재생하려면 할 수는 있는 거 같음. html 태그 쓰고 iframe 끼워넣으니까 됨.
javascript로 제어하는 = audio 객체 생성해서 해야하는데. 그 부분 필요

audio 관련 
로직 짤 순서
- audio 10개 담고, 스크롤 할때마다 audio 바뀌게 재생
- audio 자동재생

유튜브 영상 iframe 따고 display none 줘도 재생되나 ?

- 전 페이지에서 클릭이벤트에 노래를 재생시켜주고
- 상세페이지에서 쭉 가져가도 될듯? 필요하다면 전역으로 넘겨주고



[스크롤 따라서 인덱스 바뀌게]
- intersection observer api
- 완료


[useRef로 DOM 집었을 때, useEffect 안에 ref.current 써야 할때 문제]
1. ref 객체 처음 생성 (null 선언)
2. hook 실행 (null로 감지)
3. ref.current 객체 할당
4. hook 재실행 안됨 -> hook 안에 있는 ref.current 관련 로직이 안됨.

react는 ref가 설정/해제되는 상황을 다룰 때, callback ref 방법 제공
-> 추후 공부



-------------0712-------------

mp3 기능 해결
- 노래 나오게
- 우선 상세페이지에서 할 수 있게 해보고
- autoPlay까지 해보기.
- 이전페이지에서 클릭이벤트로 줘도 괜찮을거같음.
커스텀훅으로 코드 정리해보기
vscode 렉 해결
빨리 끝나면, firebase db 사용 / 호스팅 공부



이슈1
1. 전페이지에서 타고 들어갔을 때 : play pause 부딪히는 에러메시지
 - useRef 로 바꾸니까 해결됨
 - 근데 또 가끔 에러가 뜸.
 - pause 는 media에 paused attribute를 추가하는거임. 얘를 체크해서 play와 안부딪히게 해줘야함. play 코드에다가 paused 체크하는 조건문 추가.
2. 같은 페이지에서 새로고침했을 때 : play()를 interaction 없이 하면 안된다 에러
 - 새로고침하면 이전페이지로 보내버릴까?
 - useLocation 써서, 새로고침 잡아낼 수 있을거같은데(얘는 최후통첩)

;완료
; 이슈2
; index 어떻게 찍히나 파악필요
; 2번 갔다가 1번으로 가면 1번 말고 3번이 재생됨.
; [해결]
; index -1 을 해줘야하는 거였고, setState에서 값이 바로 반영안되는 이슈였음.
; audio 객체를 state 대신 useRef 에다가 관리.


;완료
; [play pause 충돌 관련]
; - audio.play() 는 promise 객체를 반환함.
; --- 재생되고 나서 뭔가 처리하고 싶다면 비동기로 처리가능.
; --- play() 호출은 promise를 반환하는데, 코드에서 promise 관련 처리를 해줘야함.
; - audio.pause()는 promise 객체를 반환안함.
; --- pause 시키고 실행시키는 비동기처리가 불가능함.
; --- pause하고 다음곡 재생시키려고 할 때, 문제가 생김. pause play 충돌
; - 곡이 load가 안돼서 그럼 -> 곡 전체를 페이지 처음에 다 받아와서 저장해놓기.


;완료
; [커스텀훅]
; 오디오
; - 오디오를 가져와서 끌어오는 거까지를 커스텀 훅으로
; - 재생하는 거는, 콘텐츠 따라 가는거기떄문에 페이지 컴포넌트에서 진행
; 스크롤(콘텐츠)
; - 얘는 커스텀훅으로 못쪼갤듯?
; - jsx element에 ref 달아놔야해서.

; audioFile 받아와서 넣는거까지만 추가하기 
; (지금은 커스텀훅 안에 박혀있음.)
; (페이지 단위에서 useAudio에다가 audioFile 넣어주는 형식으로.)



[파이어베이스]
- 일단 호스팅 해놓을까?
파이어스토리지 공부
-> 스토리지 관련 (db) / 리액트에서 꺼내오는 것까지
--- auth, CRUD는 코드로 써놓음
--- CRUD에다가 인가달고 싶으면, firestore의 rules를 잘 조정하면됨. 필요하면 다시 공부
--- file 업로드까지 완료
-> 호스팅 관련

내일 공부사항
- storage에서 파일 가져오기
- 호스팅 안되는 이유 찾기
- 프로젝트 오타 빼고 다시 하기


[디테일 페이지 관련 작업해야할 사항]
플로팅 버튼 / 음악 재생 & 가사보기
<작업중>뒤로가기 버튼
-> 화면 가운데 절반 (피그마 레이어 참고)에 마우스 들면, 커서 바뀌게.
-> 위 아래 인덱스 제외하고, 보수적으로 잡아도 될듯.
-> 커서모양 바뀌게 // 여기 벗어나면 다시 바뀜
스크롤하면 인덱스바 사라지게 / 역스크롤하면 인덱스바 다시 생김.

스크롤 관련 성능 최적화
문틀 모양 div 디자인
음악을 페이지 스크롤해서 바뀔때마다 음악도 바뀌는게 별로인듯?
-> 노래 바뀌는게 너무 빠름.
-> 노래는 그냥 앨범 처음부터 쭉 재생하고
-> 원한다면 넘길 수 있게 클릭 주는게 나을듯.


정규앨범은 페이지 바뀌는 거
비정규앨범은 팝업느낌으로.

둘다 페이지 url은 바뀌는 걸로?



-------------0713-------------
[오늘 작업]

[디테일페이지]
- 플로팅 버튼 / 음악 재생 관리
- 뒤로가기 버튼 마무리 (애니메이션)
; - 스크롤 시 인덱스 바 사라짐 / 역스크롤시 인덱스바 다시 생김.
; - 첫 렌더링할때 전부 빨간색인 문제.

; [비정규앨범 디테일페이지]
; - 팝업 느낌으로 페이지 뜨게
; - url 바뀌게 (페이지 컴포넌트를 따로 만들기)
; - url 안바뀌게 (컴포넌트를 불러오기 / props 활용해서 데이터 가져오기)

[파이어베이스]
- storage에서 파일 가져오기
- 호스팅 안되는 이유    
- 프로젝트 오타 빼고 다시 세팅해보기

[디테일페이지 - 추후]
스크롤 관련 성능 최적화
문틀 모양 div 디자인
음악을 페이지 스크롤해서 바뀔때마다 음악도 바뀌는게 별로인듯?
-> 노래 바뀌는게 너무 빠름.
-> 노래는 그냥 앨범 처음부터 쭉 재생하고
-> 원한다면 넘길 수 있게 클릭 주는게 나을듯.

[공부해야할 사항]
- 커스텀 훅
--- 내 코드가 왜 되는지 모르겠음.
--- 어디까지 커스텀 훅안에서 처리가 되고, 어디까지 페이지 컴포넌트에 넘겨줘야하는지
--- 훅 함수를 import하면, 훅 함수 내의 state도 자동으로 공유가 되는건지
- 비동기 처리에서 trycatch 사용


렌더링되고 -> useEffect 실행
: 첫 렌더링 때 전부 빨간색으로 렌더링 (이때 currentContent)
: useEffect 실행할 때, setCurrentContent 일어나서 리렌더링



-------------0714-------------
[메인페이지]
- 이미지 맞춰보기
- 책장이랑 앨범 넣어서 css 맞추기

[디테일페이지]
- 플로팅 버튼 / 음악 재생 관리
- 뒤로가기 버튼 마무리 (애니메이션)

[파이어베이스]
- storage에서 파일 가져오기
- 호스팅 안되는 이유    
- 프로젝트 오타 빼고 다시 세팅해보기



-------------0717-------------
[메인페이지]
- styled-component에서, 애니메이션 꼽기 (hover했을때 다른 컴포넌트 css 바꾸는거 해결)
- 적응형 관련 사이즈 조절 되는지
- background-image 사이즈 조절 되는지

[인트로페이지]
- 처음에 밑으로 화면 내려갈 때, 토글해야  내려가는거 말고 그냥 자동으로 내려가게
; - css 빨려들어가는 느낌
- 처음에 잔나비 손글씨 (welcome to jannabi world 기획)
- click하면 진행바 쭉 채우고, 다 채웠을 때 바로 입장되게?

[정규앨범 상세페이지]
- 음악 관리 기능
- 상세페이지 디자인 (디자인이 아직 안됨)


-------------0718-------------
[메인페이지]
- styled-component에서, 애니메이션 꼽기 (hover했을때 다른 컴포넌트 css 바꾸는거 해결)
- 적응형 관련 사이즈 조절 되는지
- background-image 사이즈 조절 되는지

[인트로페이지]
- 처음에 밑으로 화면 내려갈 때, 토글해야  내려가는거 말고 그냥 자동으로 내려가게
- 처음에 잔나비 손글씨 (welcome to jannabi world 기획)